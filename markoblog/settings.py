"""
Django settings for markoblog project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

import os
from django.conf.global_settings import DATETIME_INPUT_FORMATS


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
PROJECT_PATH    = os.path.realpath(os.path.dirname(__file__))

SITE_ID = 1
#SOCIETE  = 1


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%%%o5+BismiAllahy@knlt8lcdv+o(3p!t!%=#9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django.contrib.sites',
    # Uncomment the next line to enable the admin:
    # Authentication
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    # debug
    'debug_toolbar',
    'djangobower',
    # Tags
    'taggit',
    'core.widgets',
    #'core.profile',
    'core.taxonomy',
    'markdownify',
    'markdown_filter',
    'mdeditor',
    # Blog
    'blog',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # ...
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'markoblog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [

                 os.path.join(BASE_DIR,  'blog', 'templates'),
                 os.path.join(BASE_DIR,  'blog', 'templates', 'blog'),
                 os.path.join(BASE_DIR,  'blog', 'templates', 'elements'),
                 os.path.join(BASE_DIR,  'blog', 'templates', 'emails'),
                 os.path.join(BASE_DIR,  'blog', 'templates', 'siteweb'),
                 os.path.join(BASE_DIR,  'core', 'templatetags'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

            ],
        },
    },
]

WSGI_APPLICATION = 'markoblog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'markoblogdb',
        'USER': 'postgres',
        'PASSWORD': 'grutil001',
        'HOST': 'localhost',
        'PORT': '',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/
# TIME_ZONE = 'UTC'
TIME_ZONE = 'Europe/Paris'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'Fr-fr'

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = True

# If you set this to False, Django will not format dates, numbers and
# calendars according to the current locale.
USE_L10N = True

# If you set this to False, Django will not use timezone-aware datetimes.
# Lorsque USE_TZ vaut True et que la base de données ne gère pas les fuseaux horaires (par ex. SQLite, MySQL, Oracle), Django lit et écrit les dates/heures en heure locale en fonction de cette option quand elle est définie et en UTC si elle ne l’est pas.

USE_TZ = False

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/var/www/example.com/media/"./manage.py bower install
MEDIA_ROOT = os.path.join(BASE_DIR  , 'uploads')
# MEDIA_ROOT = os.path.join(BASE_DIR  , 'media/')

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash.
# Examples: "http://example.com/media/", "http://media.example.com/"
MEDIA_URL = '/media/'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

#STATIC_ROOT = os.path.join(BASE_DIR,   'projects', 'static')
STATIC_ROOT = os.path.join(BASE_DIR,   'static')

# Additional locations of static files
STATICFILES_DIRS__ = [
    os.path.join(BASE_DIR, 'blog', 'static'),
    os.path.join(BASE_DIR, 'bower_components'),
    os.path.join(BASE_DIR, 'media'),
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
]

# List of finder classes that know how to find static files in
# various locations.
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'djangobower.finders.BowerFinder',
    )

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

## django toolbar
INTERNAL_IPS = [
    # ...
    '127.0.0.1',
    # ...
]

#################
# AUTHENTICATION #
##################
ACCOUNT_EMAIL_REQUIRED=True
ACCOUNT_AUTHENTICATION_METHOD = 'username'

AUTH_USER_MODEL = 'auth.User'

AUTHENTICATION_BACKENDS = ['django.contrib.auth.backends.ModelBackend']

LOGIN_URL = '/account/login/'

LOGIN_REDIRECT_URL = '/'

LOGOUT_REDIRECT_URL = '/account/login/'

# The number of days a password reset link is valid for
PASSWORD_RESET_TIMEOUT_DAYS = 3


AUTH_PASSWORD_VALIDATORS = []
